testNG Details

https://www.simplilearn.com/know-about-testng-annotations-in-selenium-webdriver-article


Test-NG:
   testNG is a unit testing tool. TestNG is advanced than the Junit.

   It is mainly used to run the code in a systematic order based on the annotations present in the testNG.

   It is a replacement for the main method.
   
   //testNG is a unit testing tool used to run the code in systematic order using built in testNG annotations
--------------------------------------------------------------------------------------------------------------

Q: Advantages of TestNG?

1. It has more annotations than Junit

2. It has more conditions than Junit

3. In testng the execution can be controlled by using testng.xml file

4. TestNG has reporting mechanism (it automatically creates two different .html reports viz.,
    (a) emailable-report.html
    (b) index.html
    
5. DataProvider is present in testNG This annotation is used to parameterize the testNG @ Tests with complex data/values viz., 
             Collection, Arrays, Object, data read from the property file, xml file, database etc


6. Dependency testing can be achieved in testNG : 
7. We can group the tests and run them based on the group names.

8. In testNG batch execution is possible @ different levels through testng.xml file viz.

   (a) package level
   (b) class level
   (c) method level

8. All the annotaions names are not confusing like junit (Ex: @Before, @After). Here the annotaions names are straight forward.

9. Here methods can be either static OR non-static








--------------------------------------------------------------------------------------------------------------

Q: How to install testNG?
Case 1:
Go to Eclipse->Help->Eclipse MarketPlace-> search for testNG->once search is found & the testNG is not installed then install it.


Case 2:
Go to Eclipse->Help->Install new Software->Add the URL http://beust.com/eclipse-> Select testNG checkbox & continue installation.

Case 3:
Copy the TestNG jars (Manually download OR through Maven pom.xml you can download automatically) to eclipse & set the build path

--------------------------------------------------------------------------------------------------------------
TestNG annotations: The annotations are the pre/post-requiteies(Except @Test script) in Test classes 
in testng which will have a definite predefined execution order/flow..

@Test
@BeforeSuite
@AfterSuite
@BeforeTest
@AfterTest
@BeforeClass
@AfterClass
@BeforeMethod
@AfterMethod
@BeforeGroups
@AfterGroups 
@Parameters
@DataProvider

Conditions: All conditions are associated with @Test annotation. //VVIP//
@Test(timeout=<milliseconds>)
@Test(expectedExceptions=<exception>.class)
@Test(enabled=false)
@Test(priority=<numbers>)
@Test(groups={"groups names"})
@Test(dataProvider={""})
@Test(dependsOnMethods={""})
@Test(dependsOnGroups={""})
@Test(alwaysRun=true)
@Test(invocationCount=<numbers>)
@Test(Parameter (values=""))
--------------------------------------------------------------------------------------------------https://www.softwaretestinghelp.com/testng-annotations-and-listeners/

@Test: This annotation is used for Test scripts only. 
  Here all the @Test will run in Ascending order based on the method name by default.


@BeforeSuite: The method with this annotation will always runs first with respect to testNG suite level.


@AfterSuite: The method with this annotation will always runs last with respect to testNG suite level 
@BeforeTest: This method will be executed before each test section is declared in the suite.
@BeforeClass: This method will be executed before first with respect to particular class


@BeforeTest: The method with this annotation will always runs first with respect to the test level 
             which is present inside the testng.xml file


@AfterTest: The method with this annotation will always runs last with respect to the test level which is present inside the testng.xml file


@BeforeClass: The method with this annotation will always run first with respect to the particular class.


@AfterClass: The method with this annotation will always run last with respect to the particular class.


@BeforeMethod: The method with this annotation will always run first for every @Test annotations.


@AfterMethod: The method with this annotation will always run last for every @Test annotations


@BeforeGroups(): The method with this annotation will always run first with respect to the group name mentioned.


@AfterGroups(): The method with this annotation will always run last with respect to the group name mentioned.


@Parameters: This annotation is used to parameterize the testNG @Test with simple data/values.


@DataProvider: This annotation is used to parameterize the testNG @ Tests with complex data/values viz., Collection, Arrays, Object, data read from the property file, xml file, database etc.



_____________________________________________________________________________


parallel execution

if parallel execution running for method means - 

class is having more than one test method and in xml level when we made it as method level 
each method executes in parallel mode



if parallel execution running for class means - 

package is having more than one class , each class will get execute in parallel mode


https://www.toolsqa.com/testng/testng-asserts/


Q: Difference between Assert & Verify?
Ans :
Assert: Assertion is a validation point .
Assertion upon failure, it will not run the below lines of code for the particular block.

Verify: Verify is a validation point.
Verify upon failure, it will run the below lines of code for the particular block as well. 
But overall test status will be failed.

--------------------
Q: Assertions in Junit:
Ans:
     Assert.assertTrue();
     Assert.assertFalse();
     Assert.assertNull();
     Assert.assertNotNull();
     Assert.assertEquals()
     Assert.assertNotEquals();
     Assert.assertSame();
     Assert.assertNotSame(); 
     Assert.assertArrayEquals(): It is not in testNG


Q: Assertions in testNG?
in testng 2 types of assertions are present
 (1) Hard Assertion
     Assert.assertTrue();
     Assert.assertFalse();
     Assert.assertNull();
     Assert.assertNotNull();
     Assert.assertEquals()
     Assert.assertNotEquals();
     Assert.assertSame();
     Assert.assertNotSame();

 (2) Soft Assertion
     SoftAssert soft = new SoftAssert();
     soft.assertTrue();
     soft.assertFalse();
     soft.assertNull();
     soft.assertNotNull();
     soft.assertEquals();
     soft.assertNotEquals();
     soft.assertSame();
     soft.assertNotSame();
     soft.assertAll();

HardAssert
SoftAssert
1. Upon failure, it will stop        
the execution of whole block          
OR below codes within                 
the blocks


1. Upon failure, it will not
    stop the block. Instead it
     will continue execution.


2. Results will be captured upon failure.
 2.  Upon failure, it wont  
    capture the result. Instead
  It shows the test passed. To
  capture the failure we   need to use .assertAll()  method at the end of test


3. Assert class contains assertion methods which are static in nature
3. SoftAssert class contains assertion methods which are non-static



2) What is the difference between Assert and soft Assert 
Assert       Soft Assert 
1) It will stop the current method execution when the verification failed 
1) It will not stop the current method execution when the verification failed 
2) All the method are static ,we donâ€™t create the object 
2) All the methods are nonstatic, we have to create the object 
3) We do not call assertAll() method 
3)we must call assertAll() method 

Q: Difference between .assertEquals() & .assertSame()?
Ans:
.assertEquals(): It checks whether both the values are same

.assertSame(): IT checks whether both value & object references are same.















Q: What happens when priority=-1?
  When priority=-1 in TestNG, it means that the test method with this attribute will be executed before any other test method with a higher priority value    

Q: What if 2 @Tests are having same priority?
Ex: both tests are having priority=1


Q: What If the mentioned group name doesnot exist?


Q: Can we achieve parallel execution using testNG?
yes we can achieve parallel execution in data provider(parallel=true)

     and also in xml , synatx : 
     parallel="methods"  threadcount="2"

Q: What happens If dependency test fails in testNG? 


Q: What is the main purpose of testNG OR unit test tools?


Q: Advantages of testNG over Junit?
already upted above, stupid check tht

Q: Can we execute the java code without main method?
yes man using testng

Q: Can we run the class members without creating a object to the class?
No 

Q: Tell me the order of execution?
@Test
@BeforeMethod
@BeforeSuite
@AfterSuite
@BeforeGroups
@AfterTest
@AfterMethod
@AfterClass

Q: Perform a task multiple times (say 10 times) without using looping statements?
invocationcount

Q: How not to execute the tests in testNG?
enabled false

Q: How to provide pre-condition & post-conditions to each test scripts in testNG?
@Before and After

Q: Different levels of executing the programmes in testNG?
method, class, pakage

Q: Can we give same name to both <test> in testng.xml file?


Q: How to fail the testNG tests?
using hardassert

Q: Types of assertions in testNG?
2

Q: Does SoftAssert captures the failures? How to capture it?
no , we need to use asertall() at last of block code

Q: The class is having methods with all the annotations except @Test? Will it get execute?
no

Q: How to re-execute the failed tests in testng?
copy the failed html report paste it in poject and run as xml suite

Q: There are 2 testscripts with @Test annotaions. First testscript failed bcoz of hard assertions.
 Will the second testscript gets executed?
yes

Q: Will the Hard assetion OR soft assertions run the finally block?
gothilla 







